Bibliography

 OCaml. 99 Problems [Internet]. Rocquencourt, France: OCaml; 2019
[cited 2020 January 11]. Available from: https://ocaml.org/
learn/tutorials/99problems.html

 Bagwell P. Fast Functional Lists, Hash-Lists, Deques and Variable
LengthArrays[Internet].Lausanne,Switzerland: Infoscience: EPF;2002
[cited 2019 February 26]. Available from: https://infoscience.
epfl.ch/record/52465 .

 Brain R. Dynamic Code Analysis vs. Static Analy-
sis Source Code Testing [Internet]. London, UK: Com-
puter Weekly; 2010 [cited 2019 March 27]. Available
from: https://www.computerweekly.com/answer/
Dynamic-code-analysis-vs-static-analysis-source
-code-testing .

 Brandauer S. Structured Data [dissertation on the Internet]. Uppsala,
Sweden: Acta Universitatis Upsaliensis; 2018 [cited 2019 February 15].
Available from: http://uu.diva-portal.org/smash/get/
diva2:1266019/FULLTEXT01.pdf .

 Brodie ML. Data abstraction, databases, and conceptual modelling:
an annotated bibliography [Internet]. 1 ed. Baltimore (MD), USA:
University of Maryland; 1980 [cited 2020 May 10]. Available from:
https://books.google.se/books?id=rlLVmDy9hPkC&
printsec=frontcover&source=gbs_book_other_
versions_r&redir_esc=y#v=onepage&q&f=false

 Broman D. Miking, 2019 June 28th [interpreter and programming lan-
guage]. Stockholm, Sweden: MCS (KTH Royal Institute of Technol-
ogy);2019[cited2019June28th].Availablefrom: https://github.
com/miking-lang/miking

 Chung L. Non-Functional Requirements in Software Engineer-
ing [Internet]. 1 ed. Berlin, Germany: Springer Berlin Hei-
delberg; 2000 [cited 2020 May 10]. Available from: https:
//kth-primo.hosted.exlibrisgroup.com/permalink/
f/qra184/46KTH_ALMA_DS51175259280002456

 Coleman D. A Structured Programming Approach to Data [Internet].
Berlin, Germany: Springer Berlin Heidelberg; 1979 [cited 2019 Febru-
ary4].Availablefrom: https://www.springer.com/gp/book/
9781468479874 .

 DannerN,PaykinJ,RoyerJS.AStaticCostAnalysisforaHigher-order
Language [Internet]. In: Brady EC, editor. Proceedings of the 7th work-
shop on programming languages meets program veriﬁcation. PLPV’13.
2013 January 22; Rome, Italy. New York (NY), USA: ACM; 2013 [cited
2021 March 13]. pages 25-34. Available from: https://dl.acm.
org/citation.cfm?id=2428123 .

 De Wael M, Marr S, De Meuter W. Data Interface + Algorithms =
Eﬃcient Programs [Internet]. In: Proceedings of the 9th International
Workshop on Implementation, Compilation, Optimization of Object-
Oriented Languages, Programs and Systems PLE. ICOOOLPS’14. 2014
July28;Uppsala,Sweden.NewYork(NY),USA:ACM;2014[cited2019
February 26]. pages 1-4. Available from: https://dl.acm.org/
citation.cfm?id=2633303 .

 EckDJ.DataStructuresandAlgorithms[Internet].Geneva(NY),USA:
HobartandWilliamSmithColleges;2004[cited2020May10].Available
from: http://math.hws.edu/eck/cs327_s04/

 Gosain A, Sharma G. A Survey of Dynamic Program Analysis
Techniques and Tools [Internet]. Advances in Intelligent Systems and
Computing. 2014 [cited 2019 March 27];327:pages 113-122. Available
from: https://www.researchgate.net/publication/
286217492_A_Survey_of_Dynamic_Program_Analysis_
Techniques_and_Tools .

 Jordan W, Bejo A, Persada AG. The Development of Lexer and
Parser as Parts of Compiler for GAMA32 Processor’s Instruction-set
using Python [Internet]. In: Wibowo FW, editor. 2019 InternationalBIBLIOGRAPHY 113
Seminar on Research of Information Technology and Intelligent Sys-
tems. ISRITI 2019. 2019 December 5-6; Yogyakarta, Indonesia. Pis-
cataway (NJ), USA: IEEE; 2019 [cited 2021 March 13]. pages: 450-
455. Available from: https://ieeexplore-ieee-org.focus.
lib.kth.se/stamp/stamp.jsp?tp=&arnumber=9034617

 Kostyukov V. A Functional Approach to Standard Binary Heaps [Inter-
net]. Ithaca (NY), USA: Cornell University. [Preprint] 2013 [cited 2019
February 25]. Available from: https://arxiv.org/abs/1312.
4666.

 LynchB,PirkelbauerP,DechevD.BuildingFastConcurrentDataStruc-
tures through Data Structure Families [Internet]. Albuquerque (NM),
USA: Sandia National Lab; 2013 [cited 2019 February 27]. Available
from: http://pirkelbauer.com/papers/mars13.pdf .

 Lämmel R. Software Languages: Syntax, Semantics, and Metapro-
gramming [Internet]. 1 ed. Berlin, Germany: Springer Berlin Hei-
delberg; 2018 [cited 2020 May 10]. Available from: https:
//kth-primo.hosted.exlibrisgroup.com/permalink/
f/qra184/46KTH_ALMA_DS51174790680002456

 Medcalc.Independentsamplest-test[Internet].Ostend,Belgium: Med-
calc; 2020 [cited 2020 January 11]. Available from: https://www.
medcalc.org/manual/ttest_computationalnotes.php

 Merriam-Webster. Data structure [Internet]. Springﬁeld (MA), USA:
Merriam-Webster; 2020 [cited 2021 March 13]. Available from:
https://www.merriam-webster.com/dictionary/data%
20structure?utm_campaign=sd&utm_medium=serp&utm_
source=jsonldBIBLIOGRAPHY 115

 MogensenTÆ. Introductionto CompilerDesign [Internet].Berlin, Ger-
many: Springer Berlin Heidelberg; 2017 [cited 2020 May 10]. Available
from: https://kth-primo.hosted.exlibrisgroup.com/
permalink/f/1vh8pa3/TN_cdi_askewsholts_vlebooks_
9783319669663

 Morris J. Data Structures and Algorithms [Internet]. Auckland, New
Zeeland: University of Auckland; 2004 [cited 2021 March 13]. Avail-
able from: https://www.cs.auckland.ac.nz/software/
AlgAnim/ds_ToC.html

 MyTutor. What is the diﬀerence between a data structure
and a data type? [Internet]. London, UK: MyTutor; 2019
[cited 2020 May 10]. Available from: https://www.
mytutor.co.uk/answers/6615/GCSE/Computing/
What-is-the-difference-between-a-data-structure-
and-a-data-type/

 Møller A, Schwartzbach MI. Static Program Analysis [Internet].
Aarhus, Denmark: Department of Computer Science Aarhus Uni-
versity; 2018. Available from: https://cs.au.dk/~amoeller/
spa/spa.pdf .

 Nielson F, Nielson HR, Hankin C. Principles of Program Analysis
[Internet]. 1 ed. Berlin, Germany: Springer Berlin Heidelberg; 2015
[cited 2020 May 10]. Available from: https://kth-primo.
hosted.exlibrisgroup.com/permalink/f/1vh8pa3/TN_
cdi_askewsholts_vlebooks_9783662038116

 Pierce BC. Types and Programming Languages. Massachusetts (NE),
USA: The MIT Press; 2002.

 ReillyED.MilestonesinComputerScienceandInformationTechnology.
1 ed. Westport (CT), USA: Greenwood Publishing Group; 2003.

 Rowland T, Weisstein EW. Tensor [Internet]. Hanborough, UK: Math-
World; 2019 [cited 2019 March 27]. Available from: http://
mathworld.wolfram.com/Tensor.html .

 SkienaSS.TheAlgorithmDesignManual.2ed.London,UK:Springer;
2008.BIBLIOGRAPHY 117

 SmithW.EverydayDataStructures.1sted.Birmingham,UK:PacktPub-
lishing; 2017.

 Steindorfer MJ. Eﬃcient Immutable Collections [dissertation thesis on
the Internet]. Amsterdam, Netherlands: UvA-DARE; 2017 [cited 2019
February 19]. Available from: http://hdl.handle.net/11245.
1/9afad883-4bfe-4499-8576-f36d3fbb8d0b .

 University of Edinburgh - School of Informatics. Algorithms and Data
Structures Note 2 [Internet]. Edinburgh, UK: University of Edinburgh;
2019[cited2019March27].Availablefrom: https://www.inf.ed.
ac.uk/teaching/courses/inf2b/algnotes/note03.pdf .

 University of Wisconsin-Madison. Intro to Abstract Data Types
and Sequences [Internet]. Madison (WI), USA: University of
Wisconsin-Madison; 2012 [cited 2019 March 27]. Available from:
http://pages.cs.wisc.edu/~paton/readings/Old/
fall01/SEQUENCES.html .

 Van-Roy P, Haridi S. Concepts, Techniques, and Models of Computer
Programming. 1 ed. Cambridge (MA), USA: MIT Press; 2004.

 Wengrow J, A Common-Sense Guide to Data Structures
and Algorithms [Internet]. 1 ed. Raleigh (NC), USA: Prag-
matic Bookshelf; 2017 [cited 2020 January 1]. Available from:
https://learning.oreilly.com/library/view/
a-common-sense-guide/9781680502794/ .

 XuG.CoCo: SoundandAdaptiveReplacementofJavaCollections[In-
ternet]. In: Castagna G, editor. Proceedings of the 27th European Con-
ference on Object-Oriented Programming. ECOOP 2013. 2013 July 1-
5; Montpellier, France. Berlin, Germany: Springer Berlin Heidelberg;
2013[cited2019March1].pages1-26.Availablefrom: https://www.
springer.com/us/book/9783642390371 .

 York University - Department of Electrical Engineering and Com-
puter Science. Sequence Abstract Data Type [Internet]. Toronto,
Canada: York University; 2016 [cited 2019 March 27]. Avail-
able from: https://www.eecs.yorku.ca/course_archive/
2016-17/F/3311/examples/09-SequenceADT.pdf .119120 APPENDIX A. APPENDIX
Appendix A
Appendix
A.1 Method-Complexity Matrix
Operation Batteries Okasaki OCaml OCaml OCaml Okasaki
ﬁnger linked array queue stack queue
tree list
All nlog(n) n n n n n
Any nlog(n) n n n n n
Append log(n) n n n n n
Drop nlog(n) n n n n n
Filter nlog(n) n n2n n n
Find nlog(n) n n n n n
First const const const const n const
Foldl n n n n n n
Foldr nlog(n) n n n n n
Isempty const const const const const const
last const n const n n n
length const n const const const n
Map n n n n n n
nth log(n) n const n n n
Poplast log(n) n n n n n
Pop log(n) const n n n n
Pushlast log(n) n n n n n
Push log(n) const n n n const
Reverse n n n n n n
Take nlog(n) n n n n n
Table A.1: Method-complexity matrix for our implemented data structures.
